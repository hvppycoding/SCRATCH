TopModule이라는 이름의 모듈을 다음과 같은 인터페이스로 구현해 주세요. 특별히 명시하지 않는 한 모든 입력 및 출력 포트는 1비트입니다.

입력 clk

입력 areset

입력 bump_left

입력 bump_right

입력 ground

입력 dig

출력 walk_left

출력 walk_right

출력 aaah

출력 digging

Lemmings라는 게임은 상당히 단순한 두뇌를 가진 생물들이 등장합니다. 너무 단순해서 우리는 그것을 유한 상태 기계(finite state machine)를 사용해 모델링하려고 합니다. Lemmings의 2D 세계에서, Lemmings는 왼쪽으로 걷는 상태(walk_left가 1) 또는 오른쪽으로 걷는 상태(walk_right가 1) 중 하나일 수 있습니다. 장애물에 부딪히면 방향을 바꿉니다. 특히, Lemming이 왼쪽에서 부딪힘을 받으면 (bump_left가 1이면) 오른쪽으로 걷습니다. 오른쪽에서 부딪힘을 받으면 (bump_right가 1이면) 왼쪽으로 걷습니다. 양쪽에서 동시에 부딪히더라도 방향을 바꿉니다.

왼쪽 또는 오른쪽으로 걷고, 부딪힘에 따라 방향을 바꾸는 것 외에도, ground=0일 때 Lemming은 떨어지며 "aaah!"라고 외칩니다. ground가 다시 나타나면 (ground=1), Lemming은 떨어지기 전과 같은 방향으로 걷는 것을 재개합니다. 떨어지는 동안 부딪히는 것은 걷는 방향에 영향을 주지 않으며, ground가 사라지는 것과 같은 싸이클에 부딪히거나 (아직 떨어지기 전), 또는 여전히 떨어지고 있을 때 ground가 다시 나타나는 것도 걷는 방향에 영향을 주지 않습니다.

걷기와 떨어짐 외에도, Lemmings는 때때로 dig와 같은 유용한 일을 하도록 지시받을 수 있습니다 (dig=1일 때 파기를 시작합니다). Lemming은 현재 땅 위를 걷고 있을 때 (ground=1이고 떨어지고 있지 않을 때) dig를 할 수 있으며, 반대편(ground=0)에 도달할 때까지 계속 팝니다. 그 시점에서, 땅이 없기 때문에, 떨어지게 되고 (aaah!), 다시 ground를 만나면 원래 방향으로 걷기를 계속합니다. 떨어짐과 마찬가지로, 파는 동안에 부딪히는 것은 아무 영향이 없으며, 떨어지는 도중이나 땅이 없을 때 dig 명령을 받는 것도 무시됩니다. (다시 말해, 걷고 있는 Lemming은 떨어지거나, dig하거나, 방향을 바꿀 수 있습니다. 이 조건들이 동시에 만족되면, 떨어짐이 가장 높은 우선순위를 가지고, 그 다음이 dig, 그 다음이 방향 전환입니다.)

이 동작을 모델링한 Moore 상태 기계를 구현하세요. areset은 Lemming 기계를 왼쪽 걷기로 비동기적으로 리셋하는 양의 엣지 트리거입니다. 모든 순차 논리는 클럭의 양의 엣지에서 동작한다고 가정합니다.








